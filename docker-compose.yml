version: '2'
services:
  query-engine:
    image: 'trinodb/trino:latest'
    container_name: query-engine
    hostname: query-engine
    ports:
      - '8080:8080'
    volumes:
      - ./etc:/etc/trino
      - ./conf:/etc/trino/conf
    networks:
      - platform-network

  postgres:
    image: 'postgres:11'
    container_name: postgres
    hostname: postgres
    expose:
      - '5432'
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: hive_db
    volumes:
      - ${PGDATA_DIR}:/var/lib/postgresql/data
    networks:
      - platform-network

  hive-metastore:
    #image: 'hive-metastore:latest'
    build: ./hive-metastore
    container_name: metastore
    hostname: hive-metastore
    ports:
      - '9083:9083' 
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: postgres
      METASTORE_TYPE: postgres
      IS_RESUME: true
    depends_on:
      - postgres
    networks:
      - platform-network

  object-storage:
    image: 'minio/minio:latest'
    hostname: object-storage
    container_name: object-storage
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - type: bind
        source: ${OBJECT_STORE_VOLUME} 
        target: /data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server --console-address ":9001" /data
    networks:
      - platform-network
  spark:
    image: bitnami/spark:3.5
    container_name: spark-master
    hostname: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8099:8080'
      - '7077:7077'
    volumes:
      - type: bind
        source: ${SPARK_JOBS_DIR} 
        target: /jobs
    networks:
      - platform-network
  spark-worker:
    image: docker.io/bitnami/spark:3.5
    container_name: spark-worker
    networks:
      - platform-network
    ports:
      - '8081:8081'
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
  jupyter-local:
    depends_on:
      - spark
    build: ./jupyter
    container_name: jupyter
    networks:
      - platform-network
    command: python -m jupyterlab --ip "0.0.0.0" --no-browser --NotebookApp.token=''
    ports:
      - 8888:8888
    volumes:
      - ${NOTEBOOKS_DIR}:/app 
    environment:
      - JUPYTER_ENABLE_LAB=yes
networks:
  platform-network:
    driver: bridge
